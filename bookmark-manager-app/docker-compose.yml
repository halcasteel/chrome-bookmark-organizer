version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: bookmark-postgres
    environment:
      POSTGRES_DB: bookmark_manager
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bookmark_user -d bookmark_manager"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-development}
    container_name: bookmark-backend
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3001
      DATABASE_URL: postgresql://admin:admin@postgres:5432/bookmark_manager
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:5173}
      JWT_SECRET: ${JWT_SECRET:-local-dev-secret}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      DEFAULT_USER_ID: ${DEFAULT_USER_ID}
      BOOKMARK_IMPORT_DIR: /app/imports
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:5173,http://localhost:80}
    volumes:
      - ./backend:/app
      - /app/node_modules
      - bookmark_imports:/app/imports
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: bookmark-frontend
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3001/api}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    command: npm run dev

  file-watcher:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-development}
    container_name: bookmark-file-watcher
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: postgresql://admin:admin@postgres:5432/bookmark_manager
      DEFAULT_USER_ID: ${DEFAULT_USER_ID}
      BOOKMARK_IMPORT_DIR: /imports
    volumes:
      - ${LOCAL_IMPORT_DIR:-./imports}:/imports
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run watch

  nginx:
    image: nginx:alpine
    container_name: bookmark-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data:
  bookmark_imports: